name: Rust Build for Linux Releases

on:
  push:
    tags:
      - "v[0-9]+.*" # Triggers on tags like v0.1.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64-unknown-linux-musl, x86_64-unknown-linux-musl]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (for ARM)
        if: matrix.target == 'aarch64-unknown-linux-musl'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package artifact
        shell: bash
        run: |
          BINARY_NAME=$(basename $(find target/${{ matrix.target }}/release/ -type f -perm +111 | head -1))
          if [ -z "$BINARY_NAME" ]; then
            echo "No executable binary found"
            exit 1
          fi
          mkdir -p dist
          cp "target/${{ matrix.target }}/release/$BINARY_NAME" "dist/${BINARY_NAME}-${{ matrix.target }}"
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
